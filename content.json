{"meta":{"title":"daraqiao.blog","subtitle":null,"description":"哆啦巧的博客","author":"doraqiao","url":"http://doraqiao.top"},"pages":[{"title":"关于哆啦巧","date":"2018-10-29T07:05:26.633Z","updated":"2018-10-29T07:05:26.632Z","comments":true,"path":"about/index.html","permalink":"http://doraqiao.top/about/index.html","excerpt":"","text":"个人信息 哆啦巧 / 22岁 / 女 Web前端工程师 / 技术渣渣 / 技术小白一枚 邮箱：hxq.951@163.com 目前工作地点：广州 项目经验 围住猫熊-小程序游戏类目（未上线，仅作为学习之用） 本人的毕设作品，使用白鹭引擎+h5的canvas，算法为贪心算法+最短路径算法 游戏模拟《围住神经猫》进行开发，猫熊没有被玩家所设的障碍物围困则为胜利，否则失败 自我评价： 能够用 HTML + CSS 编写语义化的代码，完成较复杂的布局 工作中用vue居多，均使用vue-cli脚手架搭建项目； 熟悉使用git，svn等代码管理工具 热爱旅行 立flag： 学习ES6！！点击此去阮大大es6教程 学习使用webpack、Gulp等开发工具"},{"title":"更新日志","date":"2018-10-29T08:29:35.764Z","updated":"2018-10-29T08:29:35.762Z","comments":true,"path":"board/index.html","permalink":"http://doraqiao.top/board/index.html","excerpt":"","text":"2018.10.29使用VUE开发项目时所遇到的问题 发布 2018.10.12 整理好更新日志和关于我《学习用hexo搭建博客》 发布"}],"posts":[{"title":"leetCode题目之初级算法-数组","slug":"leetCode题目之初级算法","date":"2018-11-12T03:46:50.000Z","updated":"2018-11-12T10:12:23.107Z","comments":true,"path":"2018/11/12/leetCode题目之初级算法/","link":"","permalink":"http://doraqiao.top/2018/11/12/leetCode题目之初级算法/","excerpt":"","text":"前言作为一个小白技术渣渣，适当的锻炼下算法的能力也是非常有必要的！刷题过程中会发现一个题目多种解题方式，算是给自己提供不同的思路吧！LeetCode官方称题目刷三遍当然是最好的啦，毕竟每次做题都是不一样的收获。当然不要死记硬背答案，因为答案不唯一！ 从数组删除重复项给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。示例 1:123给定数组 nums = [1,1,2],函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。你不需要考虑数组中超出新长度后面的元素。 示例 2:123给定 nums = [0,0,1,1,1,2,2,3,3,4],函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。你不需要考虑数组中超出新长度后面的元素。 我的解答：1234567891011var removeDuplicates = function(nums) &#123; let k =0; for(let i=0;i&lt;nums.length;i++)&#123; if(nums[i] != nums[k])&#123; k++; nums[k] = nums[i]; &#125; &#125; nums.splice(k+1) return nums.length&#125;; 买卖股票的最佳时机 II给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。示例 1:1234输入: [7,1,5,3,6,4]输出: 7解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。 随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。 示例 2:12345输入: [1,2,3,4,5] 输出: 4 解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。 注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。 因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。 示例 3:123输入: [7,6,4,3,1]输出: 0解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。 我的解答：123456789var maxProfit = function(prices) &#123; let nums = 0; for(let i=0;i&lt;prices.length;i++)&#123; if(prices[i] &lt; prices[i+1])&#123; nums+= prices[i+1] - prices[i]; &#125; &#125; return nums&#125;; 旋转数组给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。 示例 1:123456输入: [1,2,3,4,5,6,7] 和 k = 3输出: [5,6,7,1,2,3,4]解释:向右旋转 1 步: [7,1,2,3,4,5,6]向右旋转 2 步: [6,7,1,2,3,4,5]向右旋转 3 步: [5,6,7,1,2,3,4] 示例 2:12345输入: [-1,-100,3,99] 和 k = 2输出: [3,99,-1,-100]解释:向右旋转 1 步: [99,-1,-100,3]向右旋转 2 步: [3,99,-1,-100] 说明:尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。要求使用空间复杂度为 O(1) 的原地算法。 我的解答：1234567891011121314151617181920//解答1var rotate = function(nums, k) &#123; for(let i=0;i&lt;k;i++)&#123; nums.unshift(nums[nums.length-1]) nums.pop(); &#125; return nums;&#125;;//解答2var rotate = function(nums, k) &#123; for(let i=0;i&lt;k;i++)&#123; nums.splice(0,0,nums[nums.length-1]); nums.pop(); &#125; return nums;&#125;;//解答3var rotate = function(nums, k) &#123; nums.unshift(...nums.splice(nums.length-k))&#125;; 存在重复给定一个整数数组，判断是否存在重复元素。如果任何值在数组中出现至少两次，函数返回 true。如果数组中每个元素都不相同，则返回 false。示例 1:12输入: [1,2,3,1]输出: true 示例 2:12输入: [1,2,3,4]输出: false 示例 3:12输入: [1,1,1,3,3,4,3,2,4,2]输出: true 我的解答：12345678910var containsDuplicate = function(nums) &#123; nums.sort(); if(nums.length&lt;=1)&#123;return false&#125; for(let i=0;i&lt;nums.length;i++)&#123; if(nums[i] == nums[i+1])&#123; return true; &#125; &#125; return false;&#125;; 别人的解题：(根据es6语法糖 set)12const set = new Set(nums)return set.size !== nums.length 只出现一次的数字给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。说明：你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？ 示例 1:12输入: [2,2,1]输出: 1 示例 2:12输入: [4,1,2,1,2]输出: 4 我的解答：12","categories":[{"name":"算法","slug":"算法","permalink":"http://doraqiao.top/categories/算法/"}],"tags":[{"name":"算法,LeetCode","slug":"算法-LeetCode","permalink":"http://doraqiao.top/tags/算法-LeetCode/"}]},{"title":"使用vue开发项目时所遇到的问题","slug":"使用vue开发项目时所遇到的问题","date":"2018-10-29T03:44:39.000Z","updated":"2018-10-29T08:34:04.037Z","comments":true,"path":"2018/10/29/使用vue开发项目时所遇到的问题/","link":"","permalink":"http://doraqiao.top/2018/10/29/使用vue开发项目时所遇到的问题/","excerpt":"","text":"vue打包问题 打包路径问题 由于打包之后，是被压缩成status文件夹和index.html，所以在路径方面有一定的差异；所以打包之前需要在config&gt;index.js文件下修改build下的（红标部分）;加个小点表示相对路径，不加表示绝对路径。 打包后图片的路径问题： 在开发的时候，在img和background的图片引入中，将路径使用绝对路径来引用，即/static/……；这样在打包之后，图片路径会直接指向根路径，导致图片路径错误；所以在开发的过程中，图片的路径最好使用相对路径，在打包的过程中会自动转换，在打包之后就不会出现图片路径问题； 在background中，使用以上方法引图片时，build之后如果出现路径名的不对，可以使用如下方式：正确配置后既可以正确引用 在build&gt;util.js下找到： 添加红色框中的内容即可 报错：The data property “show” is already declared as a prop. Use prop default value instead.原因：是因为 组件里传进去的参数又在data 里面定义过，然后报错；即在props里有，又在data中定义了，造成冲突；所以将data中定义的删除即可； 引入axios 很多人引用axios之前都会引用vue-axios，其实不需要引入vue-axios。vue官方文档也更加推荐使用axios来使用ajax；安装vue-axios是为了让axios可以全局使用，下面这个方法也可以让axios全局使用 使用 Vue.prototype.$axios = axios 来全局引用即可，调用时直接this.$axios即可 axios.defaults.baseURL = ‘’ 设置接口地址的前缀 控制v-for里面显示某个数据：在使用v-for的标签里 加上v-if的判断语句 目前所遇到的问题暂时是这些啦，后续如果有更多的问题会上来更新！本人小白渣渣，如有错漏请提出，谢谢~","categories":[{"name":"vue","slug":"vue","permalink":"http://doraqiao.top/categories/vue/"}],"tags":[{"name":"vue","slug":"vue","permalink":"http://doraqiao.top/tags/vue/"}]},{"title":"学习用hexo搭建博客","slug":"学习用hexo搭建博客","date":"2018-10-10T09:46:17.000Z","updated":"2018-10-12T10:05:26.117Z","comments":true,"path":"2018/10/10/学习用hexo搭建博客/","link":"","permalink":"http://doraqiao.top/2018/10/10/学习用hexo搭建博客/","excerpt":"","text":"前言整个博客的搭建方法，均是参考此篇博文进行搭建，其中前面的讲解非常详细，由于我的电脑已经有git和node.js的环境，所以我是直接从安装hexo开始，到绑定域名结束。博主写的挺好的，适合小白从零搭建我在此总结下自己搭建的时候一些操作与问题记录 各种文档 张小花的博客（参考此博文搭建博客的） hexo hexo的官方文档，里面也有些命令行的讲解，适当的查看文档也是非常有帮助 hueman主题hexo里面的一个主题，张小花博主用的是这个主题，我刚开始搭建，所以也参照博主用这个；里面也有对应的说明，详情看其wiki 关于markdown语法的文档，请搜索引擎寻找~ 安装hexo1$npm i -g hexo （对于linux小白:请输入上面的命令时不要输入$,从$后面的内容开始输入，同下）嫌npm慢者可以用cnpm 安装地址 查看hexo的版本：1$hexo -v 初始化hexo命令：1$hexo init 初始化之后可以看到：blog文件夹下面有这些东西 解释下图片中对应的文件作用： node_modules：是依赖包 public：存放的是生成的页面 scaffolds：命令生成文章等的模板 source：用命令创建的各种文章 themes：主题 _config.yml：整个博客的配置 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息 生成SSH并添加到github进入github -&gt; new repository -&gt; 填写各种信息（其中doraqiao是我github的名称，请更改为自己的github名称才生效；description是描述，可以填写一些描述，也可以后期补上） 上面配置完毕后，在gitbash上配置github账户信息：（name和email请换成你自己的github name 和邮箱）12$git config --global user.name &quot;YourName&quot;$git config --global user.email &quot;YourEmail&quot; 上述完成后，生成SSH：(输入github邮箱账号)1$ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 然后找到id_rsa.pub文件的内容，获取的内容就是我们需要的ssh12$cd ~/.ssh$cat id_rsa.pub 将文件内容放到github上 点击 new ssh key title可以填blog（方便以后辨识），也可以自己取key就把文件的内容放进来 添加后，验证是否添加成功：1$ssh -T git@github.com 如图所示：表示添加成功 部署项目在根目录下的 _config.yml 文件进行配置：（冒号之后都是有一个半角空格的）1234deploy: type: git repo: https://github.com/YourName/YourName.github.io.git branch: master 配置之后，进入blog目录，执行：123$hexo clean$hexo generate$hexo server 执行完毕之后，在浏览器输入：http://localhost:4000就可以看到你的博客啦！ 上传到github让你写好的文章部署到github上并让别人浏览，所以需要安装：1$npm install hexo-deployer-git --save 然后再执行此命令：123$hexo clean$hexo generate$hexo deploy ps:deploy的过程中需要输入你的username和password最后，在浏览器中输入http://yourgithubname.github.io 就可以看到个人博客 绑定个人域名 先购买域名啦！我是在万网购买的域名啦，附上地址 添加CNAME：在根目录下source文件夹新建一个名为CNAME的文件（没有后缀），里面添加购买的域名，只能添加一个（如我添加的是doraqiao.top） 在dns解析里面，添加一条记录，其中ip为你的github地址（在cmd中ping获取） 最后再次执行123$hexo clean$hexo g$hexo d 然后用域名打开，就可以看到博客啦！","categories":[{"name":"搭建博客","slug":"搭建博客","permalink":"http://doraqiao.top/categories/搭建博客/"}],"tags":[{"name":"hexo搭建博客","slug":"hexo搭建博客","permalink":"http://doraqiao.top/tags/hexo搭建博客/"}]}]}